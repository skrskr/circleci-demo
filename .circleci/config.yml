# # # Use the latest 2.1 version of CircleCI pipeline process engine.
# # # See: https://circleci.com/docs/2.0/configuration-reference
# # version: 2.1


# # # defaults: &defaults
# # #   docker:
# # #     - image: circleci/node:13.8.0


# # # commands:
# #   # sayhello:
# #   #   description: "A very simple command to print hello"
# #   #   parameters:
# #   #     to:
# #   #       type: string
# #   #       default: "Hello"
# #   #   steps:
# #   #     - run: echo My << parameters.to >> World !!
# #   # print_pipeline_id:
# #   #   description: "print workflow id"
# #   #   steps:
# #   #     - run: echo $CIRCLE_WORKFLOW_ID
    

# # # Define a job to be invoked later in a workflow.
# # # See: https://circleci.com/docs/2.0/configuration-reference/#jobs
# # jobs:
# #   # print_hello:
# #   #   docker:
# #   #     - image: circleci/node:13.8.0
# #   #   steps:
# #   #     - run:
# #   #         name: "Hello Job"
# #   #         command: "echo hello"

# #   # print_world:
# #   #   docker:
# #   #     - image: circleci/node:13.8.0
# #   #   steps:
# #   #     - run:
# #   #         name: "world Job"
# #   #         command: "echo world"
  
# #   # global_var:
# #   #   docker:
# #   #     - image: circleci/node:13.8.0
# #   #   steps:
# #   #     - run:
# #   #         name: "global var Job"
# #   #         command: "echo My pipeline id is << pipeline.id >> and my git branch is << pipeline.git.branch >>"
# #   #     - run:
# #   #         name: "Env Variables Job"
# #   #         command: "echo $MY_ENV_NAME"

# #   # save_hello_world_output:
# #   #   docker:
# #   #     - image: circleci/node:13.8.0
# #   #   steps:
# #   #     - run:
# #   #         name: "save hello world to workspace"
# #   #         command: "echo 'Hello World!!' > output.txt"
# #   #     - persist_to_workspace:
# #   #         root: .
# #   #         paths:
# #   #           - output.txt

# #   # print_output_file:
# #   #   docker:
# #   #     - image: circleci/node:13.8.0
# #   #   steps:
# #   #     - attach_workspace:
# #   #         at: .
# #   #     - run:
# #   #         name: "Restor hello world from output.txt"
# #   #         command: "cat output.txt"

# #   # save_hello_world_cache:
# #   #   <<: *defaults
# #   #   steps:
# #   #     - run:
# #   #         name: "save hello world to workspace"
# #   #         command: "echo 'Hello World CACHE!!' > cache.txt"
# #   #     - save_cache:
# #   #         key: v1-my-project-key
# #   #         paths:
# #   #           - cache.txt

# #   # print_cache_file:
# #   #   <<: *defaults
# #   #   steps:
# #   #     - restore_cache:
# #   #         keys:
# #   #           - v1-my-project-key
# #   #     - run:
# #   #         name: "Restore hello world from cache.txt cache"
# #   #         command: "cat cache.txt"

# #   # say_hello_with_commands:
# #   #   docker:
# #   #     - image: "cimg/base:stable"
# #   #   steps:
# #   #     - sayhello:
# #   #         to: "HI"

# #   # print_pipeline_id:
# #   #   docker:
# #   #     - image: "cimg/base:stable"
# #   #   steps:
# #   #     - print_pipeline_id

# #   # try_fail_job:
# #   #   docker:
# #   #     - image: "circleci/node:13.8.0"
# #   #   steps:
# #   #     - run:
# #   #         name: "exit 1 to stop pplie"
# #   #         command: exit 1
# #   #     - run:
# #   #         name: "rollback when failer happend"
# #   #         command: echo "rollback_step"
# #   #         when: on_fail

# # # Invoke jobs via workflows
# # # See: https://circleci.com/docs/2.0/configuration-reference/#workflows
# # workflows:
# #   default-workflow:
# #     jobs:
# #       # - print_hello
# #       # - print_world:
# #       #     requires: 
# #       #       - print_hello
# #       # - global_var
# #       # - save_hello_world_output
# #       # - print_output_file:
# #       #     requires:
# #       #       - save_hello_world_output

# #       # - save_hello_world_cache
# #       # - print_cache_file:
# #       #     requires:
# #       #       - save_hello_world_cache
# #       # - say_hello_with_commands
# #       # - print_pipeline_id
# #       # - try_fail_job

# version: 2.1

# jobs:
#   build:
#     docker:
#       - image: circleci/node:13.8.0
#     steps:
#       - checkout
#       - run: npm i
#       - run: npm run lint
  
#   test:
#     docker:
#       - image: circleci/node:13.8.0
#     steps:
#       - checkout
#       - run: npm i
#       - run: npm run test
  
#   analyze:
#     docker:
#       - image: circleci/node:13.8.0
#     steps:
#       - checkout
#       - run: npm audit

# workflows:
#   my-workflow:
#     jobs:
#       - build
#       - test:
#           requires:
#             - build
#       - analyze:
#           requires:
#             - test


version: 2.1

orbs:
  slack: circleci/slack@4.3.0

commands:
  notify_slack_error:
    steps:
      - slack/notify:
          event: fail
          template: basic_fail_1

  notify_slack_pass:
    steps:
      - slack/notify:
          event: pass
          template: basic_success_1
          
jobs:
  deploy:
    docker:
      - image: circleci/node:12.18.0
    steps:
      - run:
          name: Install packages
          command: echo install
      - run:
          name: exit from command
          command: echo "hi"
      - notify_slack_error
      - notify_slack_pass

workflows:
  test_slack_notification:
    jobs:
      - deploy